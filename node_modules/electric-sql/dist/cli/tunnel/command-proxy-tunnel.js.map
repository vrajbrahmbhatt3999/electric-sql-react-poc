{"version":3,"sources":["../../../src/cli/tunnel/command-proxy-tunnel.ts"],"sourcesContent":["import { Command } from 'commander'\nimport net from 'net'\nimport { WebSocket, createWebSocketStream } from 'ws'\nimport { addOptionGroupToCommand, getConfig } from '../config'\nimport { parsePort } from '../util'\n\nexport function makeProxyTunnelCommand() {\n  const command = new Command('proxy-tunnel')\n  command.description(\n    'Open a tunnel to the Electric Postgres Proxy and binds it to a local port'\n  )\n\n  addOptionGroupToCommand(command, 'tunnel')\n\n  command\n    .option('--local-port <port>', 'Local port to bind the tunnel to', '65432')\n    .action(async (opts) => {\n      const config = getConfig(opts)\n      const localPort = parsePort(opts.localPort)\n\n      try {\n        const serviceUrl = mapHttpToWebSocketInUrl(config.SERVICE)\n        proxyTunnel({ serviceUrl, localPort })\n      } catch (error) {\n        console.error(error)\n        process.exit(1)\n      }\n    })\n\n  return command\n}\n\nexport interface ProxyTunnelOptions {\n  serviceUrl: string\n  localPort: number\n}\n\nexport function proxyTunnel({ serviceUrl, localPort }: ProxyTunnelOptions) {\n  const server = net.createServer((clientSocket) => {\n    log('New connection!')\n\n    const websocketUrl = `${serviceUrl}/proxy`\n    const websocket = new WebSocket(websocketUrl, [], {\n      perMessageDeflate: false,\n      skipUTF8Validation: true,\n    })\n    const wsStream = createWebSocketStream(websocket)\n    wsStream.on('error', (error) => {\n      log('WebSocket error:', error)\n    })\n    log('Created WebSocket stream')\n\n    clientSocket.on('end', () => {\n      websocket.close()\n      log('Client disconnected')\n    })\n\n    clientSocket.pipe(wsStream).pipe(clientSocket)\n  })\n\n  server.listen(localPort, () => {\n    console.log(\n      `ElectricSQL Postgres Proxy Tunnel listening on port ${localPort}`\n    )\n    console.log(`Connected to ElectricSQL Service at ${serviceUrl}`)\n    console.log('Connect to the database using:')\n    console.log(`  psql -h localhost -p ${localPort} -U <username> <database>`)\n    console.log('Or with the connection string:')\n    console.log(\n      `  psql \"postgres://<username>:<password>@localhost:${localPort}/<database>\"`\n    )\n    console.log('Press Ctrl+C to exit')\n    console.log('--')\n  })\n}\n\nfunction log(...args: any[]) {\n  const timestamp = new Date().toISOString()\n  console.log(timestamp, ...args)\n}\n\nfunction mapHttpToWebSocketInUrl(urlString: string) {\n  const url = new URL(urlString)\n  switch (url.protocol) {\n    case 'https:': {\n      url.protocol = 'wss:'\n      break\n    }\n    case 'http:': {\n      url.protocol = 'ws:'\n      break\n    }\n    case 'wss:':\n    case 'ws:':\n      break\n    default:\n      throw `Invalid URL scheme ${url.protocol} in ELECTRIC_SERVICE`\n  }\n  return url.toString()\n}\n"],"mappings":"AAAA,SAAS,eAAe;AACxB,OAAO,SAAS;AAChB,SAAS,WAAW,6BAA6B;AACjD,SAAS,yBAAyB,iBAAiB;AACnD,SAAS,iBAAiB;AAEnB,SAAS,yBAAyB;AACvC,QAAM,UAAU,IAAI,QAAQ,cAAc;AAC1C,UAAQ;AAAA,IACN;AAAA,EACF;AAEA,0BAAwB,SAAS,QAAQ;AAEzC,UACG,OAAO,uBAAuB,oCAAoC,OAAO,EACzE,OAAO,OAAO,SAAS;AACtB,UAAM,SAAS,UAAU,IAAI;AAC7B,UAAM,YAAY,UAAU,KAAK,SAAS;AAE1C,QAAI;AACF,YAAM,aAAa,wBAAwB,OAAO,OAAO;AACzD,kBAAY,EAAE,YAAY,UAAU,CAAC;AAAA,IACvC,SAAS,OAAO;AACd,cAAQ,MAAM,KAAK;AACnB,cAAQ,KAAK,CAAC;AAAA,IAChB;AAAA,EACF,CAAC;AAEH,SAAO;AACT;AAOO,SAAS,YAAY,EAAE,YAAY,UAAU,GAAuB;AACzE,QAAM,SAAS,IAAI,aAAa,CAAC,iBAAiB;AAChD,QAAI,iBAAiB;AAErB,UAAM,eAAe,GAAG,UAAU;AAClC,UAAM,YAAY,IAAI,UAAU,cAAc,CAAC,GAAG;AAAA,MAChD,mBAAmB;AAAA,MACnB,oBAAoB;AAAA,IACtB,CAAC;AACD,UAAM,WAAW,sBAAsB,SAAS;AAChD,aAAS,GAAG,SAAS,CAAC,UAAU;AAC9B,UAAI,oBAAoB,KAAK;AAAA,IAC/B,CAAC;AACD,QAAI,0BAA0B;AAE9B,iBAAa,GAAG,OAAO,MAAM;AAC3B,gBAAU,MAAM;AAChB,UAAI,qBAAqB;AAAA,IAC3B,CAAC;AAED,iBAAa,KAAK,QAAQ,EAAE,KAAK,YAAY;AAAA,EAC/C,CAAC;AAED,SAAO,OAAO,WAAW,MAAM;AAC7B,YAAQ;AAAA,MACN,uDAAuD,SAAS;AAAA,IAClE;AACA,YAAQ,IAAI,uCAAuC,UAAU,EAAE;AAC/D,YAAQ,IAAI,gCAAgC;AAC5C,YAAQ,IAAI,0BAA0B,SAAS,2BAA2B;AAC1E,YAAQ,IAAI,gCAAgC;AAC5C,YAAQ;AAAA,MACN,sDAAsD,SAAS;AAAA,IACjE;AACA,YAAQ,IAAI,sBAAsB;AAClC,YAAQ,IAAI,IAAI;AAAA,EAClB,CAAC;AACH;AAEA,SAAS,OAAO,MAAa;AAC3B,QAAM,aAAY,oBAAI,KAAK,GAAE,YAAY;AACzC,UAAQ,IAAI,WAAW,GAAG,IAAI;AAChC;AAEA,SAAS,wBAAwB,WAAmB;AAClD,QAAM,MAAM,IAAI,IAAI,SAAS;AAC7B,UAAQ,IAAI,UAAU;AAAA,IACpB,KAAK,UAAU;AACb,UAAI,WAAW;AACf;AAAA,IACF;AAAA,IACA,KAAK,SAAS;AACZ,UAAI,WAAW;AACf;AAAA,IACF;AAAA,IACA,KAAK;AAAA,IACL,KAAK;AACH;AAAA,IACF;AACE,YAAM,sBAAsB,IAAI,QAAQ;AAAA,EAC5C;AACA,SAAO,IAAI,SAAS;AACtB;","names":[]}