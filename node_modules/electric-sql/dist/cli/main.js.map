{"version":3,"sources":["../../src/cli/main.ts"],"sourcesContent":["#!/usr/bin/env node\n\nimport dotenvFlow from 'dotenv-flow'\ndotenvFlow.config({\n  silent: true,\n})\n\nimport { Command } from 'commander'\nimport { LIB_VERSION } from '../version/index'\nimport { makeGenerateCommand } from './migrations/command-generate'\nimport { makeStartCommand } from './docker-commands/command-start'\nimport { makeStopCommand } from './docker-commands/command-stop'\nimport { makeStatusCommand } from './docker-commands/command-status'\nimport { makePsqlCommand } from './docker-commands/command-psql'\nimport { makeShowConfigCommand } from './configure/command-show-config'\nimport { makeWithConfigCommand } from './configure/command-with-config'\nimport { makeProxyTunnelCommand } from './tunnel/command-proxy-tunnel'\n\nasync function main() {\n  const program = new Command()\n\n  program\n    .name('npx electric-sql')\n    .description('CLI to enable building ElectricSQL projects in TypeScript')\n    .version(LIB_VERSION)\n\n  // Add commands\n  ;[\n    makeGenerateCommand,\n    makeStartCommand,\n    makeStopCommand,\n    makeStatusCommand,\n    makePsqlCommand,\n    makeShowConfigCommand,\n    makeWithConfigCommand,\n    makeProxyTunnelCommand,\n  ].forEach((cmd) => program.addCommand(cmd()))\n\n  await program.parseAsync(process.argv)\n}\n\nmain()\n"],"mappings":";AAEA,OAAO,gBAAgB;AACvB,WAAW,OAAO;AAAA,EAChB,QAAQ;AACV,CAAC;AAED,SAAS,eAAe;AACxB,SAAS,mBAAmB;AAC5B,SAAS,2BAA2B;AACpC,SAAS,wBAAwB;AACjC,SAAS,uBAAuB;AAChC,SAAS,yBAAyB;AAClC,SAAS,uBAAuB;AAChC,SAAS,6BAA6B;AACtC,SAAS,6BAA6B;AACtC,SAAS,8BAA8B;AAEvC,eAAe,OAAO;AACpB,QAAM,UAAU,IAAI,QAAQ;AAE5B,UACG,KAAK,kBAAkB,EACvB,YAAY,2DAA2D,EACvE,QAAQ,WAAW;AAGrB;AAAA,IACC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,EAAE,QAAQ,CAAC,QAAQ,QAAQ,WAAW,IAAI,CAAC,CAAC;AAE5C,QAAM,QAAQ,WAAW,QAAQ,IAAI;AACvC;AAEA,KAAK;","names":[]}