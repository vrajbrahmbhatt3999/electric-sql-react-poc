function dedent(strings, ...values) {
  let str = strings[0];
  for (let i = 0; i < values.length; i++) {
    str += String(values[i]) + strings[i + 1];
  }
  const lines = str.split("\n");
  const minIndent = lines.filter((line) => line.trim()).reduce((minIndent2, line) => {
    const indent = line.match(/^\s*/)?.[0].length ?? 0;
    return indent < minIndent2 ? indent : minIndent2;
  }, Infinity);
  if (lines[0] === "") {
    lines.shift();
  }
  if (lines[lines.length - 1] === "") {
    lines.pop();
  }
  return lines.map((line) => {
    line = line.slice(minIndent);
    if (/^\s/.test(line)) {
      return "\n" + line;
    } else if (line === "") {
      return "\n";
    } else {
      return line.trim() + " ";
    }
  }).join("").trim();
}
function buildDatabaseURL(opts) {
  const base = new URL(`postgresql://${opts.host}`);
  base.username = opts.user;
  base.password = opts.password;
  base.port = opts.port.toString();
  base.pathname = opts.dbName;
  if (opts.ssl !== void 0) {
    base.searchParams.set("sslmode", opts.ssl ? "require" : "disable");
  }
  return base.toString();
}
export {
  buildDatabaseURL,
  dedent
};
//# sourceMappingURL=string.js.map