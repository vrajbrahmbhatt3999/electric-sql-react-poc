{"version":3,"sources":["../../../src/cli/configure/command-with-config.ts"],"sourcesContent":["import { Command } from 'commander'\nimport { spawnSync } from 'child_process'\nimport { getConfig, envFromConfig, ConfigOptionName, Config } from '../config'\n\nexport function makeWithConfigCommand() {\n  return new Command('with-config')\n    .description('Run a command with config arguments substituted')\n    .arguments('<command>')\n    .action(async (command) => {\n      withConfig(command)\n    })\n}\n\nexport function withConfig(command: string, config?: Config) {\n  const _config = config || getConfig()\n  const env = process.env\n  const re = /\\{{([A-Z_]+)}}/g\n  const cmd = command\n    .replace(re, (match, envVar) => {\n      const value = envVar.startsWith('ELECTRIC_')\n        ? _config[envVar.slice('ELECTRIC_'.length) as ConfigOptionName] ??\n          env[envVar]\n        : env[envVar]\n      if (value === undefined) {\n        return match\n      } else if (typeof value === 'string') {\n        return value\n      } else {\n        return value.toString()\n      }\n    })\n    .split(' ')\n\n  return spawnSync(cmd[0], cmd.slice(1), {\n    stdio: 'inherit',\n    shell: true,\n    env: {\n      ...env,\n      ...envFromConfig(_config),\n    },\n  })\n}\n"],"mappings":"AAAA,SAAS,eAAe;AACxB,SAAS,iBAAiB;AAC1B,SAAS,WAAW,qBAA+C;AAE5D,SAAS,wBAAwB;AACtC,SAAO,IAAI,QAAQ,aAAa,EAC7B,YAAY,iDAAiD,EAC7D,UAAU,WAAW,EACrB,OAAO,OAAO,YAAY;AACzB,eAAW,OAAO;AAAA,EACpB,CAAC;AACL;AAEO,SAAS,WAAW,SAAiB,QAAiB;AAC3D,QAAM,UAAU,UAAU,UAAU;AACpC,QAAM,MAAM,QAAQ;AACpB,QAAM,KAAK;AACX,QAAM,MAAM,QACT,QAAQ,IAAI,CAAC,OAAO,WAAW;AAC9B,UAAM,QAAQ,OAAO,WAAW,WAAW,IACvC,QAAQ,OAAO,MAAM,YAAY,MAAM,CAAqB,KAC5D,IAAI,MAAM,IACV,IAAI,MAAM;AACd,QAAI,UAAU,QAAW;AACvB,aAAO;AAAA,IACT,WAAW,OAAO,UAAU,UAAU;AACpC,aAAO;AAAA,IACT,OAAO;AACL,aAAO,MAAM,SAAS;AAAA,IACxB;AAAA,EACF,CAAC,EACA,MAAM,GAAG;AAEZ,SAAO,UAAU,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG;AAAA,IACrC,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,MACH,GAAG;AAAA,MACH,GAAG,cAAc,OAAO;AAAA,IAC1B;AAAA,EACF,CAAC;AACH;","names":[]}