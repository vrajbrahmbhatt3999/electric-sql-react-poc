{"version":3,"sources":["../../../src/cli/docker-commands/docker-utils.ts"],"sourcesContent":["import { spawn } from 'child_process'\nimport path from 'path'\nimport { fileURLToPath } from 'url'\n\nconst composeFile = path.join(\n  path.dirname(fileURLToPath(import.meta.url)),\n  'docker',\n  'compose.yaml'\n)\n\nconst composeFileWithPostgres = path.join(\n  path.dirname(fileURLToPath(import.meta.url)),\n  'docker',\n  'compose-with-postgres.yaml'\n)\n\nexport function dockerCompose(\n  command: string,\n  userArgs: string[] = [],\n  containerName?: string,\n  env: { [key: string]: string } = {}\n) {\n  const withPostgres = env?.COMPOSE_PROFILES === 'with-postgres'\n  const args = [\n    'compose',\n    '--ansi',\n    'always',\n    '-f',\n    withPostgres ? composeFileWithPostgres : composeFile,\n    command,\n    ...userArgs,\n  ]\n  return spawn('docker', args, {\n    stdio: 'inherit',\n    env: {\n      ...process.env,\n      ...(containerName ? { COMPOSE_PROJECT_NAME: containerName } : {}),\n      ...env,\n    },\n  })\n}\n"],"mappings":"AAAA,SAAS,aAAa;AACtB,OAAO,UAAU;AACjB,SAAS,qBAAqB;AAE9B,MAAM,cAAc,KAAK;AAAA,EACvB,KAAK,QAAQ,cAAc,YAAY,GAAG,CAAC;AAAA,EAC3C;AAAA,EACA;AACF;AAEA,MAAM,0BAA0B,KAAK;AAAA,EACnC,KAAK,QAAQ,cAAc,YAAY,GAAG,CAAC;AAAA,EAC3C;AAAA,EACA;AACF;AAEO,SAAS,cACd,SACA,WAAqB,CAAC,GACtB,eACA,MAAiC,CAAC,GAClC;AACA,QAAM,eAAe,KAAK,qBAAqB;AAC/C,QAAM,OAAO;AAAA,IACX;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,eAAe,0BAA0B;AAAA,IACzC;AAAA,IACA,GAAG;AAAA,EACL;AACA,SAAO,MAAM,UAAU,MAAM;AAAA,IAC3B,OAAO;AAAA,IACP,KAAK;AAAA,MACH,GAAG,QAAQ;AAAA,MACX,GAAI,gBAAgB,EAAE,sBAAsB,cAAc,IAAI,CAAC;AAAA,MAC/D,GAAG;AAAA,IACL;AAAA,EACF,CAAC;AACH;","names":[]}