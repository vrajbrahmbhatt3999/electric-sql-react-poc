{"version":3,"sources":["../../../src/cli/docker-commands/command-psql.ts"],"sourcesContent":["import { Command } from 'commander'\nimport {\n  addOptionGroupToCommand,\n  getConfig,\n  GetConfigOptionsForGroup,\n} from '../config'\nimport { buildDatabaseURL, parsePgProxyPort } from '../util'\nimport { dockerCompose } from './docker-utils'\n\nexport function makePsqlCommand() {\n  const command = new Command('psql')\n  command.description('Connect with psql to the ElectricSQL PostgreSQL proxy')\n\n  addOptionGroupToCommand(command, 'proxy')\n\n  command.action(async (opts) => {\n    psql(opts)\n  })\n\n  return command\n}\n\nexport function psql(opts: GetConfigOptionsForGroup<'proxy' | 'electric'>) {\n  const config = getConfig(opts)\n  // As we are connecting to the proxy from within the docker network, we have to\n  // use the container name instead of localhost.\n  const containerDbUrl = buildDatabaseURL({\n    user: config.DATABASE_USER,\n    password: config.PG_PROXY_PASSWORD,\n    host: 'electric',\n    port: parsePgProxyPort(config.PG_PROXY_PORT).port,\n    dbName: config.DATABASE_NAME,\n  })\n  dockerCompose(\n    'exec',\n    ['-it', 'postgres', 'psql', containerDbUrl],\n    config.CONTAINER_NAME\n  )\n}\n"],"mappings":"AAAA,SAAS,eAAe;AACxB;AAAA,EACE;AAAA,EACA;AAAA,OAEK;AACP,SAAS,kBAAkB,wBAAwB;AACnD,SAAS,qBAAqB;AAEvB,SAAS,kBAAkB;AAChC,QAAM,UAAU,IAAI,QAAQ,MAAM;AAClC,UAAQ,YAAY,uDAAuD;AAE3E,0BAAwB,SAAS,OAAO;AAExC,UAAQ,OAAO,OAAO,SAAS;AAC7B,SAAK,IAAI;AAAA,EACX,CAAC;AAED,SAAO;AACT;AAEO,SAAS,KAAK,MAAsD;AACzE,QAAM,SAAS,UAAU,IAAI;AAG7B,QAAM,iBAAiB,iBAAiB;AAAA,IACtC,MAAM,OAAO;AAAA,IACb,UAAU,OAAO;AAAA,IACjB,MAAM;AAAA,IACN,MAAM,iBAAiB,OAAO,aAAa,EAAE;AAAA,IAC7C,QAAQ,OAAO;AAAA,EACjB,CAAC;AACD;AAAA,IACE;AAAA,IACA,CAAC,OAAO,YAAY,QAAQ,cAAc;AAAA,IAC1C,OAAO;AAAA,EACT;AACF;","names":[]}