{"version":3,"sources":["../../../src/drivers/expo-sqlite/index.ts"],"sourcesContent":["// N.b.: importing this module is an entrypoint that imports the React Native\n// environment dependencies. Specifically `react-native-fs`. You can use the\n// alternative entrypoint in `./test` to avoid importing this.\nimport { DbName } from '../../util/types'\n\nimport {\n  ElectrifyOptions,\n  electrify as baseElectrify,\n} from '../../electric/index'\n\nimport { DatabaseAdapter } from './adapter'\nimport { ElectricConfig } from '../../config'\nimport { Database } from './database'\n\nimport { ElectricClient } from '../../client/model/client'\nimport { DbSchema } from '../../client/model/schema'\nimport { WebSocketReactNative } from '../../sockets/react-native'\n\nexport { DatabaseAdapter }\nexport type { Database }\n\nexport const electrify = async <T extends Database, DB extends DbSchema<any>>(\n  db: T,\n  dbDescription: DB,\n  config: ElectricConfig = {},\n  opts?: ElectrifyOptions\n): Promise<ElectricClient<DB>> => {\n  const dbName: DbName = db._name\n  const adapter = opts?.adapter || new DatabaseAdapter(db)\n  const socketFactory = opts?.socketFactory || WebSocketReactNative\n\n  const namespace = await baseElectrify(\n    dbName,\n    dbDescription,\n    adapter,\n    socketFactory,\n    config,\n    opts\n  )\n\n  return namespace\n}\n"],"mappings":"AAKA;AAAA,EAEE,aAAa;AAAA,OACR;AAEP,SAAS,uBAAuB;AAMhC,SAAS,4BAA4B;AAK9B,MAAM,YAAY,OACvB,IACA,eACA,SAAyB,CAAC,GAC1B,SACgC;AAChC,QAAM,SAAiB,GAAG;AAC1B,QAAM,UAAU,MAAM,WAAW,IAAI,gBAAgB,EAAE;AACvD,QAAM,gBAAgB,MAAM,iBAAiB;AAE7C,QAAM,YAAY,MAAM;AAAA,IACtB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAEA,SAAO;AACT;","names":[]}