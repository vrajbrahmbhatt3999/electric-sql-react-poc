{"version":3,"sources":["../../../src/drivers/generic/mock.ts"],"sourcesContent":["import { SerialDatabaseAdapter } from '.'\nimport { RunResult } from '../../electric/adapter'\nimport { Row, Statement } from '../../util'\n\nexport class MockDatabaseAdapter extends SerialDatabaseAdapter {\n  readonly defaultNamespace = 'main'\n  private expectRun: ((stmt: Statement) => Promise<RunResult>) | undefined\n  private expectQuery: ((stmt: Statement) => Promise<Row[]>) | undefined\n\n  constructor() {\n    super()\n  }\n\n  mockRun(check: (stmt: Statement) => Promise<RunResult>) {\n    this.expectRun = check\n  }\n\n  mockQuery(check: (stmt: Statement) => Promise<Row[]>) {\n    this.expectQuery = check\n  }\n\n  async _run(stmt: Statement): Promise<RunResult> {\n    return (\n      (await this.expectRun?.(stmt)) || Promise.resolve({ rowsAffected: 0 })\n    )\n  }\n\n  async _query(stmt: Statement): Promise<Row[]> {\n    return (await this.expectQuery?.(stmt)) || Promise.resolve([])\n  }\n}\n"],"mappings":"AAAA,SAAS,6BAA6B;AAI/B,MAAM,4BAA4B,sBAAsB;AAAA,EACpD,mBAAmB;AAAA,EACpB;AAAA,EACA;AAAA,EAER,cAAc;AACZ,UAAM;AAAA,EACR;AAAA,EAEA,QAAQ,OAAgD;AACtD,SAAK,YAAY;AAAA,EACnB;AAAA,EAEA,UAAU,OAA4C;AACpD,SAAK,cAAc;AAAA,EACrB;AAAA,EAEA,MAAM,KAAK,MAAqC;AAC9C,WACG,MAAM,KAAK,YAAY,IAAI,KAAM,QAAQ,QAAQ,EAAE,cAAc,EAAE,CAAC;AAAA,EAEzE;AAAA,EAEA,MAAM,OAAO,MAAiC;AAC5C,WAAQ,MAAM,KAAK,cAAc,IAAI,KAAM,QAAQ,QAAQ,CAAC,CAAC;AAAA,EAC/D;AACF;","names":[]}