import { DatabaseAdapter } from './adapter.js';
import { Database, ElectricDatabase } from './database.js';
import { ElectricConfig } from '../../config/index.js';
import { ElectrifyOptions } from '../../electric/index.js';
import { ElectricClient, DbSchema } from '../../client/model/index.js';
export { DatabaseAdapter, ElectricDatabase };
export type { Database };
/**
 * This driver uses `sqlx` and Tauri
 * as a bridge to a Postgres driver written in Rust.
 */
export declare const electrify: <T extends Database, DB extends DbSchema<any>>(db: T, dbDescription: DB, config: ElectricConfig, opts?: ElectrifyOptions) => Promise<ElectricClient<DB>>;
