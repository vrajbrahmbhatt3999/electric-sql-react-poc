import { DatabaseAdapter } from './adapter.js';
import { ElectricDatabase } from './database.js';
import { electrify as baseElectrify } from '../../electric/index.js';
import { WebSocketWeb } from '../../sockets/web.js';
import { PgBundleMigrator } from '../../migrators/bundle.js';
const electrify = async (db, dbDescription, config, opts) => {
  const dbName = db.name;
  const adapter = opts?.adapter || new DatabaseAdapter(db);
  const migrator = opts?.migrator || new PgBundleMigrator(adapter, dbDescription.pgMigrations);
  const socketFactory = opts?.socketFactory || WebSocketWeb;
  const prepare = async (_connection) => void 0;
  const configWithDialect = {
    ...config,
    dialect: "Postgres"
  };
  const client = await baseElectrify(
    dbName,
    dbDescription,
    adapter,
    socketFactory,
    configWithDialect,
    {
      migrator,
      prepare,
      ...opts
    }
  );
  return client;
};
export {
  DatabaseAdapter,
  ElectricDatabase,
  electrify
};
//# sourceMappingURL=index.js.map