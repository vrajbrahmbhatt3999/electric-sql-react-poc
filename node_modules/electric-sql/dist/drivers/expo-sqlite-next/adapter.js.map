{"version":3,"sources":["../../../src/drivers/expo-sqlite-next/adapter.ts"],"sourcesContent":["import { Row, SqlValue } from '../../util/types'\nimport { Statement } from '../../util'\nimport { RunResult } from '../../electric/adapter'\nimport { Database } from './database'\nimport { SerialDatabaseAdapter } from '../generic'\n\nexport class DatabaseAdapter extends SerialDatabaseAdapter {\n  readonly db: Database\n  readonly defaultNamespace = 'main'\n  constructor(db: Database) {\n    super()\n    this.db = db\n  }\n\n  async _run(statement: Statement): Promise<RunResult> {\n    const { sql: source, args: params = [] } = statement\n    const result = await this.db.runAsync(\n      source,\n      params as Omit<SqlValue, 'bigint'>\n    )\n    return {\n      rowsAffected: result.changes,\n    }\n  }\n\n  async _query(statement: Statement): Promise<Row[]> {\n    const { sql: source, args: params = [] } = statement\n    return await this.db.getAllAsync(source, params as Omit<SqlValue, 'bigint'>)\n  }\n}\n"],"mappings":"AAIA,SAAS,6BAA6B;AAE/B,MAAM,wBAAwB,sBAAsB;AAAA,EAChD;AAAA,EACA,mBAAmB;AAAA,EAC5B,YAAY,IAAc;AACxB,UAAM;AACN,SAAK,KAAK;AAAA,EACZ;AAAA,EAEA,MAAM,KAAK,WAA0C;AACnD,UAAM,EAAE,KAAK,QAAQ,MAAM,SAAS,CAAC,EAAE,IAAI;AAC3C,UAAM,SAAS,MAAM,KAAK,GAAG;AAAA,MAC3B;AAAA,MACA;AAAA,IACF;AACA,WAAO;AAAA,MACL,cAAc,OAAO;AAAA,IACvB;AAAA,EACF;AAAA,EAEA,MAAM,OAAO,WAAsC;AACjD,UAAM,EAAE,KAAK,QAAQ,MAAM,SAAS,CAAC,EAAE,IAAI;AAC3C,WAAO,MAAM,KAAK,GAAG,YAAY,QAAQ,MAAkC;AAAA,EAC7E;AACF;","names":[]}