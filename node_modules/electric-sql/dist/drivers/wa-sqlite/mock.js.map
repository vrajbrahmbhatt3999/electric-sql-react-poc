{"version":3,"sources":["../../../src/drivers/wa-sqlite/mock.ts"],"sourcesContent":["import { DbName, Row, Statement } from '../../util'\n\nexport class MockDatabase {\n  name: DbName\n  fail: Error | undefined\n\n  constructor(dbName: DbName, fail?: Error) {\n    this.name = dbName\n    this.fail = fail\n  }\n\n  async exec(_statement: Statement): Promise<Row[]> {\n    if (typeof this.fail !== 'undefined') throw this.fail\n\n    const dbName = this.name\n\n    return [\n      { db: dbName, val: 1 },\n      { db: dbName, val: 2 },\n    ]\n  }\n\n  getRowsModified(): number {\n    return 0\n  }\n}\n"],"mappings":"AAEO,MAAM,aAAa;AAAA,EACxB;AAAA,EACA;AAAA,EAEA,YAAY,QAAgB,MAAc;AACxC,SAAK,OAAO;AACZ,SAAK,OAAO;AAAA,EACd;AAAA,EAEA,MAAM,KAAK,YAAuC;AAChD,QAAI,OAAO,KAAK,SAAS;AAAa,YAAM,KAAK;AAEjD,UAAM,SAAS,KAAK;AAEpB,WAAO;AAAA,MACL,EAAE,IAAI,QAAQ,KAAK,EAAE;AAAA,MACrB,EAAE,IAAI,QAAQ,KAAK,EAAE;AAAA,IACvB;AAAA,EACF;AAAA,EAEA,kBAA0B;AACxB,WAAO;AAAA,EACT;AACF;","names":[]}