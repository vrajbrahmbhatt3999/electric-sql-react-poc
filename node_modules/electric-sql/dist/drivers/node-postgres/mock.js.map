{"version":3,"sources":["../../../src/drivers/node-postgres/mock.ts"],"sourcesContent":["import { Database } from './database'\nimport { QueryConfig, QueryResult, QueryResultRow } from 'pg'\nimport { DbName } from '../../util'\n\nexport class MockDatabase implements Database {\n  name: DbName\n  fail: Error | undefined\n\n  constructor(\n    public host: string,\n    public port: number,\n    public database?: string,\n    fail?: Error\n  ) {\n    this.name = `${host}:${port}/${database ?? ''}`\n    this.fail = fail\n  }\n\n  async query<R extends QueryResultRow = any, I extends any[] = any[]>(\n    _queryConfig: QueryConfig<I>\n  ): Promise<Pick<QueryResult<R>, 'rows' | 'rowCount'>> {\n    if (typeof this.fail !== 'undefined') throw this.fail\n\n    return {\n      rows: [{ val: 1 } as unknown as R, { val: 2 } as unknown as R],\n      rowCount: 0,\n    }\n  }\n\n  async stop(): Promise<void> {\n    return\n  }\n}\n"],"mappings":"AAIO,MAAM,aAAiC;AAAA,EAI5C,YACS,MACA,MACA,UACP,MACA;AAJO;AACA;AACA;AAGP,SAAK,OAAO,GAAG,IAAI,IAAI,IAAI,IAAI,YAAY,EAAE;AAC7C,SAAK,OAAO;AAAA,EACd;AAAA,EAXA;AAAA,EACA;AAAA,EAYA,MAAM,MACJ,cACoD;AACpD,QAAI,OAAO,KAAK,SAAS;AAAa,YAAM,KAAK;AAEjD,WAAO;AAAA,MACL,MAAM,CAAC,EAAE,KAAK,EAAE,GAAmB,EAAE,KAAK,EAAE,CAAiB;AAAA,MAC7D,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EAEA,MAAM,OAAsB;AAC1B;AAAA,EACF;AACF;","names":[]}