{"version":3,"sources":["../../../src/drivers/node-postgres/database.ts"],"sourcesContent":["import type { Client, QueryConfig, QueryResult, QueryResultRow } from 'pg'\n\nexport type Database = Pick<Client, 'host' | 'port' | 'database'> & {\n  query<R extends QueryResultRow = any, I extends any[] = any[]>(\n    queryConfig: QueryConfig<I>\n  ): Promise<Pick<QueryResult<R>, 'rows' | 'rowCount'>>\n}\n\ntype StopFn = () => Promise<void>\n\ntype PostgresConfig = {\n  /**\n   * The name of the database.\n   */\n  name: string\n  /**\n   * The location where the data should be persisted to.\n   */\n  databaseDir: string\n  /**\n   * Default is 'postgres'.\n   */\n  user?: string\n  /**\n   * Default is 'password'.\n   */\n  password?: string\n  /**\n   * Default is 54321.\n   */\n  port?: number\n  /**\n   * When set to fale, the database will be deleted when the DB is stopped.\n   * Default is true.\n   */\n  persistent?: boolean\n}\n\n/**\n * Creates and opens a DB backed by Postgres\n */\nexport async function createEmbeddedPostgres(\n  config: PostgresConfig\n): Promise<{ db: Database; stop: StopFn }> {\n  const EmbeddedPostgres = (await import('embedded-postgres')).default\n  // Initialize Postgres\n  const pg = new EmbeddedPostgres({\n    databaseDir: config.databaseDir,\n    user: config.user ?? 'postgres',\n    password: config.password ?? 'password',\n    port: config.port ?? 54321,\n    persistent: config.persistent ?? true,\n  })\n\n  await pg.initialise()\n  await pg.start()\n  await pg.createDatabase(config.name)\n  const db = pg.getPgClient()\n  await db.connect()\n\n  let stopPromise: Promise<void>\n\n  // We use the database directory as the name\n  // because it uniquely identifies the DB\n  return {\n    db,\n    stop: () => (stopPromise ??= pg.stop()),\n  }\n}\n"],"mappings":"AAyCA,eAAsB,uBACpB,QACyC;AACzC,QAAM,oBAAoB,MAAM,OAAO,mBAAmB,GAAG;AAE7D,QAAM,KAAK,IAAI,iBAAiB;AAAA,IAC9B,aAAa,OAAO;AAAA,IACpB,MAAM,OAAO,QAAQ;AAAA,IACrB,UAAU,OAAO,YAAY;AAAA,IAC7B,MAAM,OAAO,QAAQ;AAAA,IACrB,YAAY,OAAO,cAAc;AAAA,EACnC,CAAC;AAED,QAAM,GAAG,WAAW;AACpB,QAAM,GAAG,MAAM;AACf,QAAM,GAAG,eAAe,OAAO,IAAI;AACnC,QAAM,KAAK,GAAG,YAAY;AAC1B,QAAM,GAAG,QAAQ;AAEjB,MAAI;AAIJ,SAAO;AAAA,IACL;AAAA,IACA,MAAM,MAAO,gBAAgB,GAAG,KAAK;AAAA,EACvC;AACF;","names":[]}