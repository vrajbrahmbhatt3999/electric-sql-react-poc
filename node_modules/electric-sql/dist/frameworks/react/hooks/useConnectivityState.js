import { useContext, useEffect, useState } from "react";
import { createConnectivityStateSubscribeFunction } from '../../../util/index.js';
import { ElectricContext } from '../provider.js';
import {
  getElectricConnectivityState,
  getValidConnectivityState
} from '../../shared/index.js';
const useConnectivityState = () => {
  const electric = useContext(ElectricContext);
  const initialState = getElectricConnectivityState(electric);
  const [state, setState] = useState(initialState);
  useEffect(() => {
    if (electric === void 0)
      return;
    const unsubscribe = createConnectivityStateSubscribeFunction(
      electric.notifier
    )((newState) => setState(getValidConnectivityState(newState)));
    setState(getElectricConnectivityState(electric));
    return unsubscribe;
  }, [electric]);
  return state;
};
var useConnectivityState_default = useConnectivityState;
export {
  useConnectivityState_default as default
};
//# sourceMappingURL=useConnectivityState.js.map