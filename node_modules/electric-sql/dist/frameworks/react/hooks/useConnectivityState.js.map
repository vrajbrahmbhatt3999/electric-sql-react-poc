{"version":3,"sources":["../../../../src/frameworks/react/hooks/useConnectivityState.ts"],"sourcesContent":["import { useContext, useEffect, useState } from 'react'\nimport { ConnectivityState } from '../../../util/types'\nimport { createConnectivityStateSubscribeFunction } from '../../../util'\nimport { ElectricContext } from '../provider'\nimport {\n  getElectricConnectivityState,\n  getValidConnectivityState,\n} from '../../shared'\n\ntype ConnectivityHook = () => ConnectivityState\n\n/**\n * React Hook to observe Electric's connectivity state\n */\nconst useConnectivityState: ConnectivityHook = () => {\n  const electric = useContext(ElectricContext)\n  const initialState: ConnectivityState = getElectricConnectivityState(electric)\n  const [state, setState] = useState<ConnectivityState>(initialState)\n\n  useEffect(() => {\n    if (electric === undefined) return\n    const unsubscribe = createConnectivityStateSubscribeFunction(\n      electric.notifier\n    )((newState) => setState(getValidConnectivityState(newState)))\n    setState(getElectricConnectivityState(electric))\n    return unsubscribe\n  }, [electric])\n\n  return state\n}\n\nexport default useConnectivityState\n"],"mappings":"AAAA,SAAS,YAAY,WAAW,gBAAgB;AAEhD,SAAS,gDAAgD;AACzD,SAAS,uBAAuB;AAChC;AAAA,EACE;AAAA,EACA;AAAA,OACK;AAOP,MAAM,uBAAyC,MAAM;AACnD,QAAM,WAAW,WAAW,eAAe;AAC3C,QAAM,eAAkC,6BAA6B,QAAQ;AAC7E,QAAM,CAAC,OAAO,QAAQ,IAAI,SAA4B,YAAY;AAElE,YAAU,MAAM;AACd,QAAI,aAAa;AAAW;AAC5B,UAAM,cAAc;AAAA,MAClB,SAAS;AAAA,IACX,EAAE,CAAC,aAAa,SAAS,0BAA0B,QAAQ,CAAC,CAAC;AAC7D,aAAS,6BAA6B,QAAQ,CAAC;AAC/C,WAAO;AAAA,EACT,GAAG,CAAC,QAAQ,CAAC;AAEb,SAAO;AACT;AAEA,IAAO,+BAAQ;","names":[]}