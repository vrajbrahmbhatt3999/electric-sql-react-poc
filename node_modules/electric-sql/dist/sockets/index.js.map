{"version":3,"sources":["../../src/sockets/index.ts"],"sourcesContent":["import { SatelliteError, SocketCloseReason } from '../util'\nimport { LIB_VERSION } from '../version'\n\nexport type Data = string | Uint8Array\n\nexport interface ConnectionOptions {\n  url: string\n}\n\nexport const AUTH_EXPIRED_CLOSE_EVENT = 'JWT-expired'\n\n// Take major & minor version of the library\nexport const PROTOCOL_VSN =\n  'electric.' + LIB_VERSION.split('.').slice(0, 2).join('.')\n\nexport interface Socket {\n  open(opts: ConnectionOptions): this\n  write(data: Data): this\n  closeAndRemoveListeners(): this\n\n  onMessage(cb: (data: Data) => void): void\n  onError(cb: (error: SatelliteError) => void): void\n  onClose(cb: (reason: SocketCloseReason) => void): void\n\n  onceConnect(cb: () => void): void\n  onceError(cb: (error: SatelliteError) => void): void\n\n  removeErrorListener(cb: (error: SatelliteError) => void): void\n}\n\nexport type SocketFactory = new (protocolVersion: string) => Socket\n"],"mappings":"AACA,SAAS,mBAAmB;AAQrB,MAAM,2BAA2B;AAGjC,MAAM,eACX,cAAc,YAAY,MAAM,GAAG,EAAE,MAAM,GAAG,CAAC,EAAE,KAAK,GAAG;","names":[]}