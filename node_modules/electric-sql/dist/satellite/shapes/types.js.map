{"version":3,"sources":["../../../src/satellite/shapes/types.ts"],"sourcesContent":["import { SatSubsDataBegin } from '../../_generated/protocol/satellite'\nimport { DataChange, SatelliteError } from '../../util'\n\nexport const SUBSCRIPTION_DELIVERED = 'subscription_delivered'\nexport const SUBSCRIPTION_ERROR = 'subscription_error'\n\nexport type SubscriptionId = string\nexport type TableName = string\nexport type ColumnName = string\n\nexport type SubscriptionDeliveredCallback = (\n  data: SubscriptionData\n) => void | Promise<void>\nexport type SubscriptionErrorCallback = (\n  error: SatelliteError,\n  subscriptionId?: SubscriptionId\n) => void\n\nexport type SubscribeResponse = {\n  subscriptionId: SubscriptionId\n  error?: SatelliteError\n}\n\nexport type UnsubscribeResponse = Record<string, never>\n\nexport type Shape = {\n  tablename: TableName\n  include?: Array<Rel>\n  where?: string\n}\n\nexport type Rel = {\n  foreignKey: Array<ColumnName> // allows composite FKs\n  select: Shape\n}\n\nexport type ShapeRequest = {\n  requestId: string\n  definition: Shape\n}\nexport type ShapeDefinition = {\n  uuid: string\n  definition: Shape\n}\nexport type ShapeRequestOrDefinition = ShapeRequest | ShapeDefinition\n\nexport type SubscriptionData = {\n  subscriptionId: SubscriptionId\n  lsn: SatSubsDataBegin['lsn']\n  data: InitialDataChange[]\n  shapeReqToUuid: { [req: string]: string }\n}\n\nexport type InitialDataChange = Required<Omit<DataChange, 'type' | 'oldRecord'>>\n"],"mappings":"AAGO,MAAM,yBAAyB;AAC/B,MAAM,qBAAqB;","names":[]}