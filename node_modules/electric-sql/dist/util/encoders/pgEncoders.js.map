{"version":3,"sources":["../../../src/util/encoders/pgEncoders.ts"],"sourcesContent":["import { sqliteTypeEncoder, sqliteTypeDecoder } from './sqliteEncoders'\nimport { textEncoder } from './common'\nimport { trueByte, falseByte } from './common'\n\nexport const pgTypeEncoder = {\n  ...sqliteTypeEncoder,\n  bool: boolToBytes,\n  json: (x: JSON) => {\n    return textEncoder.encode(JSON.stringify(x))\n  },\n}\n\nexport const pgTypeDecoder = {\n  ...sqliteTypeDecoder,\n  bool: bytesToBool,\n}\n\nfunction boolToBytes(b: boolean) {\n  if (typeof b !== 'boolean') {\n    throw new Error(`Invalid boolean value: ${b}`)\n  }\n  return new Uint8Array([b ? trueByte : falseByte])\n}\n\nfunction bytesToBool(bs: Uint8Array): boolean {\n  if (bs.length === 1 && (bs[0] === trueByte || bs[0] === falseByte)) {\n    return bs[0] === trueByte\n  }\n\n  throw new Error(`Invalid binary-encoded boolean value: ${bs}`)\n}\n"],"mappings":"AAAA,SAAS,mBAAmB,yBAAyB;AACrD,SAAS,mBAAmB;AAC5B,SAAS,UAAU,iBAAiB;AAE7B,MAAM,gBAAgB;AAAA,EAC3B,GAAG;AAAA,EACH,MAAM;AAAA,EACN,MAAM,CAAC,MAAY;AACjB,WAAO,YAAY,OAAO,KAAK,UAAU,CAAC,CAAC;AAAA,EAC7C;AACF;AAEO,MAAM,gBAAgB;AAAA,EAC3B,GAAG;AAAA,EACH,MAAM;AACR;AAEA,SAAS,YAAY,GAAY;AAC/B,MAAI,OAAO,MAAM,WAAW;AAC1B,UAAM,IAAI,MAAM,0BAA0B,CAAC,EAAE;AAAA,EAC/C;AACA,SAAO,IAAI,WAAW,CAAC,IAAI,WAAW,SAAS,CAAC;AAClD;AAEA,SAAS,YAAY,IAAyB;AAC5C,MAAI,GAAG,WAAW,MAAM,GAAG,CAAC,MAAM,YAAY,GAAG,CAAC,MAAM,YAAY;AAClE,WAAO,GAAG,CAAC,MAAM;AAAA,EACnB;AAEA,QAAM,IAAI,MAAM,yCAAyC,EAAE,EAAE;AAC/D;","names":[]}