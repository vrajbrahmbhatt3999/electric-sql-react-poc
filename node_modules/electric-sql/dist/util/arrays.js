function chunkBy(arr, mapper) {
  return {
    *[Symbol.iterator]() {
      if (arr.length === 0)
        return;
      let currentChunkValue = mapper(arr[0], 0, arr);
      let newChunkValue;
      let currentChunk = [arr[0]];
      for (let idx = 1; idx < arr.length; ++idx) {
        newChunkValue = mapper(arr[idx], idx, arr);
        if (currentChunkValue === newChunkValue) {
          currentChunk.push(arr[idx]);
          currentChunkValue = newChunkValue;
        } else {
          yield [currentChunkValue, currentChunk];
          currentChunkValue = newChunkValue;
          currentChunk = [arr[idx]];
        }
      }
      yield [currentChunkValue, currentChunk];
    }
  };
}
export {
  chunkBy
};
//# sourceMappingURL=arrays.js.map