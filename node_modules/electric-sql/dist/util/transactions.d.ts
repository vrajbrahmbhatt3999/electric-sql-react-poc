import { Statement } from './index.js';
import { ForeignKeyChecks } from '../config/index.js';
import { DatabaseAdapter, RunResult } from '../electric/index.js';
/**
 * Runs the provided statements in a transaction and sets the `foreign_keys` pragma based on the `fkChecks` flag.
 * FK checks are enabled if `fkChecks` is `ForeignKeyChecks.enabled`.
 * FK checks are disabled if `fkChecks` is `ForeignKeyChecks.disabled`.
 * FK checks are left untouched if `fkChecks` is `ForeignKeyChecks.inherit`.
 * `fkChecks` should only be set to `ForeignKeyChecks.disabled` when using SQLite as we already disable FK checks for incoming TXs when using Postgres,
 * so the executed SQL code to disable FKs is for SQLite dialect only.
 */
export declare function runInTransaction(adapter: DatabaseAdapter, fkChecks: ForeignKeyChecks, ...stmts: Statement[]): Promise<RunResult>;
