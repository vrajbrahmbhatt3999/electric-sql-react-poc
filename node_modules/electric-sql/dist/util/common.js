import { numberToBytes } from './encoders/common.js';
const DEFAULT_LOG_POS = numberToBytes(0);
function emptyPromise() {
  let resolve;
  let reject;
  const promise = new Promise((res, rej) => {
    resolve = res;
    reject = rej;
  });
  return { promise, resolve, reject };
}
function getWaiter() {
  const { promise, resolve, reject } = emptyPromise();
  let waiting = false;
  let finished = false;
  return {
    waitOn: async () => {
      waiting = true;
      await promise;
    },
    resolve: async () => {
      finished = true;
      resolve();
    },
    reject: async (error) => {
      finished = true;
      waiting ? reject(error) : resolve();
    },
    finished: () => {
      return finished;
    }
  };
}
function isObject(value) {
  return typeof value === "object" && value !== null && !Array.isArray(value);
}
export {
  DEFAULT_LOG_POS,
  emptyPromise,
  getWaiter,
  isObject
};
//# sourceMappingURL=common.js.map