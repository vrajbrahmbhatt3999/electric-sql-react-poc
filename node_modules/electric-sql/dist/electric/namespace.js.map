{"version":3,"sources":["../../src/electric/namespace.ts"],"sourcesContent":["// This is the namespace that's patched onto the user's database client\n// (technically via the proxy machinery) as the `.electric` property.\nimport { DatabaseAdapter } from './adapter'\nimport { Notifier, UnsubscribeFunction } from '../notifiers'\nimport { ConnectivityState } from '../util/types'\nimport { GlobalRegistry, Registry } from '../satellite'\n\nexport class ElectricNamespace {\n  dbName: string\n  adapter: DatabaseAdapter\n  notifier: Notifier\n  public readonly registry: Registry | GlobalRegistry\n  private _isConnected: boolean\n  public get isConnected(): boolean {\n    return this._isConnected\n  }\n\n  private _unsubscribeStateChanges: UnsubscribeFunction\n\n  constructor(\n    dbName: string,\n    adapter: DatabaseAdapter,\n    notifier: Notifier,\n    registry: Registry | GlobalRegistry\n  ) {\n    this.dbName = dbName\n    this.adapter = adapter\n    this.notifier = notifier\n    this.registry = registry\n    this._isConnected = false\n\n    this._unsubscribeStateChanges =\n      this.notifier.subscribeToConnectivityStateChanges(\n        ({ connectivityState }) => {\n          this.setIsConnected(connectivityState)\n        }\n      )\n  }\n\n  setIsConnected(connectivityState: ConnectivityState): void {\n    this._isConnected = connectivityState.status === 'connected'\n  }\n\n  // We lift this function a level so the user can call\n  // `db.electric.potentiallyChanged()` rather than the longer / more redundant\n  // `db.electric.notifier.potentiallyChanged()`.\n  potentiallyChanged(): void {\n    this.notifier.potentiallyChanged()\n  }\n\n  /**\n   * Cleans up the resources used by the `ElectricNamespace`.\n   */\n  async close(): Promise<void> {\n    this._unsubscribeStateChanges()\n    await this.registry.stop(this.dbName)\n  }\n}\n"],"mappings":"AAOO,MAAM,kBAAkB;AAAA,EAC7B;AAAA,EACA;AAAA,EACA;AAAA,EACgB;AAAA,EACR;AAAA,EACR,IAAW,cAAuB;AAChC,WAAO,KAAK;AAAA,EACd;AAAA,EAEQ;AAAA,EAER,YACE,QACA,SACA,UACA,UACA;AACA,SAAK,SAAS;AACd,SAAK,UAAU;AACf,SAAK,WAAW;AAChB,SAAK,WAAW;AAChB,SAAK,eAAe;AAEpB,SAAK,2BACH,KAAK,SAAS;AAAA,MACZ,CAAC,EAAE,kBAAkB,MAAM;AACzB,aAAK,eAAe,iBAAiB;AAAA,MACvC;AAAA,IACF;AAAA,EACJ;AAAA,EAEA,eAAe,mBAA4C;AACzD,SAAK,eAAe,kBAAkB,WAAW;AAAA,EACnD;AAAA;AAAA;AAAA;AAAA,EAKA,qBAA2B;AACzB,SAAK,SAAS,mBAAmB;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,QAAuB;AAC3B,SAAK,yBAAyB;AAC9B,UAAM,KAAK,SAAS,KAAK,KAAK,MAAM;AAAA,EACtC;AACF;","names":[]}