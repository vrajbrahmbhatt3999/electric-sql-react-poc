import { base64 } from '../util/encoders/index.js';
class InvalidTokenError extends Error {
}
function jwtDecode(token) {
  const pos = 1;
  const part = token.split(".")[pos];
  if (typeof part !== "string") {
    throw new InvalidTokenError(
      `Invalid token specified: missing part #${pos + 1}`
    );
  }
  let decodeSuccess = false;
  try {
    const decoded = base64.decode(part);
    decodeSuccess = true;
    return JSON.parse(decoded);
  } catch (e) {
    const problem = decodeSuccess ? "invalid json" : "invalid base64";
    throw new InvalidTokenError(
      `Invalid token specified: ${problem} for part #${pos + 1} (${e.message})`
    );
  }
}
export {
  InvalidTokenError,
  jwtDecode
};
//# sourceMappingURL=decode.js.map