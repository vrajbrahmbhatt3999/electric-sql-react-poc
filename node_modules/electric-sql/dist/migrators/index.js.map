{"version":3,"sources":["../../src/migrators/index.ts"],"sourcesContent":["import { ForeignKeyChecks } from '../config'\nimport { Statement } from '../util'\nimport { QueryBuilder } from './query-builder'\n\nexport { SqliteBundleMigrator, PgBundleMigrator } from './bundle'\nexport { MockMigrator } from './mock'\nexport { parseMetadata, makeMigration } from './builder'\nexport type { MetaData } from './builder'\n\nexport interface Migration {\n  statements: string[]\n  version: string\n}\n\nexport interface StmtMigration {\n  statements: Statement[]\n  version: string\n}\n\nexport type MigrationRecord = {\n  version: string\n}\n\nexport function makeStmtMigration(migration: Migration): StmtMigration {\n  return {\n    ...migration,\n    statements: migration.statements.map((sql) => ({ sql })),\n  }\n}\n\nexport interface Migrator {\n  up(): Promise<number>\n  apply(migration: StmtMigration, fkChecks: ForeignKeyChecks): Promise<void>\n  applyIfNotAlready(\n    migration: StmtMigration,\n    fkChecks: ForeignKeyChecks\n  ): Promise<boolean>\n  querySchemaVersion(): Promise<string | undefined>\n  queryBuilder: QueryBuilder\n}\n"],"mappings":"AAIA,SAAS,sBAAsB,wBAAwB;AACvD,SAAS,oBAAoB;AAC7B,SAAS,eAAe,qBAAqB;AAiBtC,SAAS,kBAAkB,WAAqC;AACrE,SAAO;AAAA,IACL,GAAG;AAAA,IACH,YAAY,UAAU,WAAW,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE;AAAA,EACzD;AACF;","names":[]}