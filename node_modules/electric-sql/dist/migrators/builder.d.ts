import { SatOpMigrate } from '../_generated/protocol/satellite.js';
import { Migration } from './index.js';
import { sqliteBuilder, pgBuilder, QueryBuilder } from './query-builder/index.js';
export { sqliteBuilder, pgBuilder, QueryBuilder };
declare const format = "SatOpMigrate";
type Format = typeof format;
declare const protocolVersion: string;
export interface MetaData {
    format: Format;
    ops: SatOpMigrate[];
    protocolVersion: typeof protocolVersion;
    version: string;
}
/**
 * Parses the metadata JSON object that accompanies a migration.
 * The main purpose of this function is to
 * decode the array of base64-encoded operations.
 */
export declare function parseMetadata(data: object): MetaData;
/**
 * Takes a migration's meta data and returns a migration.
 * The returned migration contains all DDL statements
 * as well as the necessary triggers.
 * @param migration The migration's meta data.
 * @returns The corresponding migration.
 */
export declare function makeMigration(migration: MetaData, builder: QueryBuilder): Migration;
