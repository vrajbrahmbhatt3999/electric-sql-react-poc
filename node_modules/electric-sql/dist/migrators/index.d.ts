import { ForeignKeyChecks } from '../config/index.js';
import { Statement } from '../util/index.js';
import { QueryBuilder } from './query-builder/index.js';
export { SqliteBundleMigrator, PgBundleMigrator } from './bundle.js';
export { MockMigrator } from './mock.js';
export { parseMetadata, makeMigration } from './builder.js';
export type { MetaData } from './builder.js';
export interface Migration {
    statements: string[];
    version: string;
}
export interface StmtMigration {
    statements: Statement[];
    version: string;
}
export type MigrationRecord = {
    version: string;
};
export declare function makeStmtMigration(migration: Migration): StmtMigration;
export interface Migrator {
    up(): Promise<number>;
    apply(migration: StmtMigration, fkChecks: ForeignKeyChecks): Promise<void>;
    applyIfNotAlready(migration: StmtMigration, fkChecks: ForeignKeyChecks): Promise<boolean>;
    querySchemaVersion(): Promise<string | undefined>;
    queryBuilder: QueryBuilder;
}
