import { satelliteDefaults } from '../satellite/config.js';
const buildInitialMigration = (builder) => {
  const { metaTable, migrationsTable, oplogTable, triggersTable, shadowTable } = satelliteDefaults(builder.defaultNamespace);
  const data = {
    migrations: [
      {
        statements: [
          //`-- The ops log table\n`,
          `CREATE TABLE IF NOT EXISTS ${oplogTable} (
  "rowid" ${builder.AUTOINCREMENT_PK},
  "namespace" TEXT NOT NULL,
  "tablename" TEXT NOT NULL,
  "optype" TEXT NOT NULL,
  "primaryKey" TEXT NOT NULL,
  "newRow" TEXT,
  "oldRow" TEXT,
  "timestamp" TEXT,  "clearTags" TEXT DEFAULT '[]' NOT NULL
);`,
          // Add an index for the oplog
          builder.createIndex("_electric_table_pk_reference", oplogTable, [
            "namespace",
            "tablename",
            "primaryKey"
          ]),
          builder.createIndex("_electric_timestamp", oplogTable, ["timestamp"]),
          //`-- Somewhere to keep our metadata\n`,
          `CREATE TABLE IF NOT EXISTS ${metaTable} (
  "key" TEXT PRIMARY KEY,
  "value" ${builder.BLOB}
);`,
          //`-- Somewhere to track migrations\n`,
          `CREATE TABLE IF NOT EXISTS ${migrationsTable} (
  "id" ${builder.AUTOINCREMENT_PK},
  "version" TEXT NOT NULL UNIQUE,
  "applied_at" TEXT NOT NULL
);`,
          //`-- Initialisation of the metadata table\n`,
          `INSERT INTO ${metaTable} (key, value) VALUES ('compensations', 1), ('lsn', ''), ('clientId', ''), ('subscriptions', ''), ('seenAdditionalData', '');`,
          //`-- These are toggles for turning the triggers on and off\n`,
          `DROP TABLE IF EXISTS ${triggersTable};`,
          `CREATE TABLE ${triggersTable} ("namespace" TEXT, "tablename" TEXT, "flag" INTEGER, PRIMARY KEY ("namespace", "tablename"));`,
          //`-- Somewhere to keep dependency tracking information\n`,
          `CREATE TABLE ${shadowTable} (
 ${builder.pgOnly(
            '"rowid" SERIAL,'
          )} "namespace" TEXT NOT NULL,
  "tablename" TEXT NOT NULL,
  "primaryKey" TEXT NOT NULL,
  "tags" TEXT NOT NULL,
  PRIMARY KEY ("namespace", "tablename", "primaryKey"));`
        ],
        version: "0"
      }
    ]
  };
  return data;
};
export {
  buildInitialMigration
};
//# sourceMappingURL=schema.js.map