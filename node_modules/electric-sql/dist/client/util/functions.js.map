{"version":3,"sources":["../../../src/client/util/functions.ts"],"sourcesContent":["export function notNullNotUndefined<T>(v: T): v is NonNullable<T> {\n  return typeof v !== 'undefined' && v !== null\n}\n\n/**\n * Maps a given function over the entries of an object.\n * @param obj The object to map over.\n * @param f The function to map over the object's entries.\n * @returns Object containing the mapped values.\n */\nexport function mapObject<V, W, T extends Record<string, V>>(\n  obj: T,\n  f: (key: string, value: V) => W\n): Record<string, W> {\n  return Object.fromEntries(\n    Object.entries(obj).map((entry) => {\n      const [key, value] = entry\n      return [key, f(key, value)]\n    })\n  )\n}\n"],"mappings":"AAAO,SAAS,oBAAuB,GAA2B;AAChE,SAAO,OAAO,MAAM,eAAe,MAAM;AAC3C;AAQO,SAAS,UACd,KACA,GACmB;AACnB,SAAO,OAAO;AAAA,IACZ,OAAO,QAAQ,GAAG,EAAE,IAAI,CAAC,UAAU;AACjC,YAAM,CAAC,KAAK,KAAK,IAAI;AACrB,aAAO,CAAC,KAAK,EAAE,KAAK,KAAK,CAAC;AAAA,IAC5B,CAAC;AAAA,EACH;AACF;","names":[]}