{"version":3,"sources":["../../../src/client/conversions/types.ts"],"sourcesContent":["export enum PgBasicType {\n  PG_BOOL = 'BOOL',\n  PG_INT = 'INT',\n  PG_INT2 = 'INT2',\n  PG_INT4 = 'INT4',\n  PG_INT8 = 'INT8',\n  PG_INTEGER = 'INTEGER',\n  PG_REAL = 'REAL',\n  PG_FLOAT4 = 'FLOAT4',\n  PG_FLOAT8 = 'FLOAT8',\n  PG_TEXT = 'TEXT',\n  PG_VARCHAR = 'VARCHAR',\n  PG_CHAR = 'CHAR',\n  PG_UUID = 'UUID',\n  PG_JSON = 'JSON',\n  PG_JSONB = 'JSONB',\n  PG_BYTEA = 'BYTEA',\n}\n\n/**\n * Union type of all Pg types that are represented by a `Date` in JS/TS.\n */\nexport enum PgDateType {\n  PG_TIMESTAMP = 'TIMESTAMP',\n  PG_TIMESTAMPTZ = 'TIMESTAMPTZ',\n  PG_DATE = 'DATE',\n  PG_TIME = 'TIME',\n  PG_TIMETZ = 'TIMETZ',\n}\n\nexport type PgType = PgBasicType | PgDateType\n\nexport function isPgDateType(pgType: PgType): boolean {\n  return (Object.values(PgDateType) as Array<string>).includes(pgType)\n}\n"],"mappings":"AAAO,IAAK,cAAL,kBAAKA,iBAAL;AACL,EAAAA,aAAA,aAAU;AACV,EAAAA,aAAA,YAAS;AACT,EAAAA,aAAA,aAAU;AACV,EAAAA,aAAA,aAAU;AACV,EAAAA,aAAA,aAAU;AACV,EAAAA,aAAA,gBAAa;AACb,EAAAA,aAAA,aAAU;AACV,EAAAA,aAAA,eAAY;AACZ,EAAAA,aAAA,eAAY;AACZ,EAAAA,aAAA,aAAU;AACV,EAAAA,aAAA,gBAAa;AACb,EAAAA,aAAA,aAAU;AACV,EAAAA,aAAA,aAAU;AACV,EAAAA,aAAA,aAAU;AACV,EAAAA,aAAA,cAAW;AACX,EAAAA,aAAA,cAAW;AAhBD,SAAAA;AAAA,GAAA;AAsBL,IAAK,aAAL,kBAAKC,gBAAL;AACL,EAAAA,YAAA,kBAAe;AACf,EAAAA,YAAA,oBAAiB;AACjB,EAAAA,YAAA,aAAU;AACV,EAAAA,YAAA,aAAU;AACV,EAAAA,YAAA,eAAY;AALF,SAAAA;AAAA,GAAA;AAUL,SAAS,aAAa,QAAyB;AACpD,SAAQ,OAAO,OAAO,UAAU,EAAoB,SAAS,MAAM;AACrE;","names":["PgBasicType","PgDateType"]}