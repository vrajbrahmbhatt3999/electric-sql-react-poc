{"version":3,"sources":["../../../../src/client/conversions/datatypes/json.ts"],"sourcesContent":["// not the most precise JSON type\n\nimport { isObject } from '../../../util'\n\n// but good enough for serialising/deserialising\ntype JSON = string | number | boolean | Array<any> | Record<string, any>\n\nexport function serialiseJSON(v: JSON): string {\n  if (isJsonNull(v)) {\n    // user provided the special `JsonNull` value\n    // to indicate a JSON null value rather than a DB NULL\n    return JSON.stringify(null)\n  }\n  return JSON.stringify(v)\n}\n\nexport function deserialiseJSON(v: string): JSON {\n  if (v === JSON.stringify(null)) return { __is_electric_json_null__: true }\n  return JSON.parse(v)\n}\n\nexport function isJsonNull(v: JSON): boolean {\n  return (\n    isObject(v) &&\n    Object.hasOwn(v, '__is_electric_json_null__') &&\n    (v as Record<string, any>)['__is_electric_json_null__']\n  )\n}\n"],"mappings":"AAEA,SAAS,gBAAgB;AAKlB,SAAS,cAAc,GAAiB;AAC7C,MAAI,WAAW,CAAC,GAAG;AAGjB,WAAO,KAAK,UAAU,IAAI;AAAA,EAC5B;AACA,SAAO,KAAK,UAAU,CAAC;AACzB;AAEO,SAAS,gBAAgB,GAAiB;AAC/C,MAAI,MAAM,KAAK,UAAU,IAAI;AAAG,WAAO,EAAE,2BAA2B,KAAK;AACzE,SAAO,KAAK,MAAM,CAAC;AACrB;AAEO,SAAS,WAAW,GAAkB;AAC3C,SACE,SAAS,CAAC,KACV,OAAO,OAAO,GAAG,2BAA2B,KAC3C,EAA0B,2BAA2B;AAE1D;","names":[]}